import java.util.*;

public class Main {
    public static void main(String args[]) {
        /*
        * [ Collections.max() ]
        * 1. public static <T extends Object & Comparable<? super T>> T max(Collection<? extends T> coll)
        *       다음과 같이 간소화할 수 있다.
        *       <T extends Comparable<? super T>> T max(Collection<? extends T> coll)
        * 1.1. <T extends Object & Comparable<? super T>>
        * 1.1.1. T extends Comparable<...>
        *           Comparable 구현 클래스여야 한다.
        * 1.1.2. Comparable<? super T>
        *           Comparable 구현은 부모 클래스여도 상관없다.
        * 
        * */
        List<MyNumber3> list = new ArrayList<>();
        list.add(new MyNumber3(1));
        list.add(new MyNumber3(3));
        list.add(new MyNumber3(2));

        MyNumber2 max = MyCollections.<MyNumber2>max(list); // error
        System.out.println(max.getValue());
        
    }
    
    static class MyNumber{
        public int value;

        public MyNumber(int value) {
            this.value = value;
        }

        public int getValue() {
            return value;
        }
    }

    static class MyNumber2 extends MyNumber implements Comparable<MyNumber>{

        public MyNumber2(int value) {
            super(value);
        }

        @Override
        public int compareTo(MyNumber o) {
            return this.value - o.getValue();
        }
    }

    static class MyNumber3 extends MyNumber2 {

        public MyNumber3(int value) {
            super(value);
        }
    }

    static class MyCollections {
        public static <T extends Object & Comparable<? super T>> T max(Collection<T> coll) {
            T max = null;
            for(T t: coll) {
                if(max == null || t.compareTo(max) > 0) {
                    max = t;
                }
            }
            return max;
        }
    }

    

}


